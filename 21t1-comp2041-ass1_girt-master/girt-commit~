#!/bin/dash

# Check if .girt exists, if not print error message
girt_directory=".girt"
if ! [ -d "$girt_directory" ]; then
    1>&2 echo "girt-commit: error: girt repository directory .girt not found"
    exit 1
fi
current_branch=$(head -n 1 ".girt/logs/current_branch.txt")
index_directory=".girt/index/$current_branch"
index_log=".girt/index/$current_branch/index.txt"

# Check if arguments are valid. If not print error message accordingly
inc=0
directory=".girt/.commit."
overall_commit_history=".girt/logs/overall_commit_history.txt"
commit_history=".girt/branches/$current_branch/commit_history.txt"

if [ "$#" -eq 2 ]; then
    if ! [ "$1" = "-m" ]; then
        1>&2 echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    else
        message=$2
    fi
elif [ "$#" -eq 3 ]; then
    if [ "$1" = "-a" ]; then
        if ! [ $2 = "-m" ] ; then
            1>&2 echo "usage: girt-commit [-a] -m commit-message"
            exit 1
        else
        # do add command if arguments correct
            while read to_add; do
                sh girt-add $to_add
            done <$index_log
            message=$3
        fi
    else
        1>&2 echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
else
    1>&2 echo "usage: girt-commit [-a] -m commit-message"
    exit 1
fi

# Check if the message is a command
message_is_command=$(echo "${message}" | grep -E "^-")
if [ "$message_is_command" != "" ]; then
    1>&2 echo "usage: girt-commit [-a] -m commit-message"
    exit 1
fi


# Find commit number by looking at past commit directories
while [ $inc -ge 0 ];
    do
    if [ -d "$directory$inc" ]; then
        inc=$((inc + 1))
    else
        break
    fi
done

# Check if there's anything to commit by checking differences of index and last commit
# If no difference, then print error message "nothing to commit"
if [ $inc -gt 0 ] ; then
    commit_number=$(wc -l $overall_commit_history | cut -d " " -f1)
    commit_num_before=$((inc - 1))
    commit_directory_before=$directory$commit_num_before
    diff_index=$(diff "$index_log" ".girt/logs/commit$commit_num_before.txt")
    if  [ "$diff_index" = "" ] ; then
        files_changed=0
        while read file_name; do
            if ! [ -e  $commit_directory_before/$file_name ] ; then
                files_changed=$((files_changed + 1))
                break
            fi
            diff_output=$(diff "$index_directory/$file_name" "$commit_directory_before/$file_name")
            if ! [ "$diff_output" = "" ]
            then
                files_changed=$((files_changed + 1))
                break
            fi
        done <$index_log
        
        if [ $files_changed -eq 0 ]; then
            1>&2 echo "nothing to commit"
            exit 1
        fi
    fi
fi


# Commit the files from index
committed_files=".girt/logs/committed_files.txt"
echo "$commit_number $message" >> $commit_history
echo "$commit_number $message" >> $overall_commit_history
echo "Committed as commit $commit_number"
mkdir $directory$inc
current_branch=$(head -n 1 ".girt/logs/current_branch.txt")
while read file_name; do
    cp "$index_directory/$file_name" "$directory$inc"
    added=false
    while read committed; do
        if [ $committed = $files ]; then
            added=true
            break
        fi
    done <$committed_files
    if [ $added = false ]; then
        echo "$filename" >> $committed_files
    fi   
done <$index_log
cp "$index_log" ".girt/logs/commit$inc.txt"
echo $inc > ".girt/branches/$current_branch/branch_commit.txt"
sort -nr $commit_history -o $commit_history
sort -nr $overall_commit_history -o $overall_commit_history
